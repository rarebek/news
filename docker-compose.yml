version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    networks:
      tarkib:
        aliases:
          - postgres
    volumes:
      - pg-data:/var/lib/postgresql/data
    env_file: .env  
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    networks:
      tarkib:
        aliases:
          - redis
    ports:
      - "6379:6379"
    env_file: .env  
    volumes:
      - redis-data:/data 
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    container_name: minio
    image: bitnami/minio:2022
    networks:
      tarkib:
        aliases:
          - minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file: .env
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: app
    image: app:latest
    networks:
      tarkib:
        aliases:
          - app
    ports:
      - "8080:8080"
    env_file: .env  
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@postgres:5432/$${POSTGRES_DB}
      - REDIS_URL=redis://redis:6379
      - MINIO_URL=http://minio:9000

networks:
  tarkib:

volumes:
  pg-data:
  redis-data:
  minio-data:
