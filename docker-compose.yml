services:
  # loki:
  #   image: grafana/loki:2.8.2
  #   user: root
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./loki-config.yaml:/etc/loki/local-config.yaml
  #     - loki-data:/var/loki
  #   networks:
  #     tarkib:
  #       aliases:
  #         - loki

  # grafana:
  #   image: grafana/grafana:9.5.2
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   depends_on:
  #     - loki
  #   networks:
  #     tarkib:
  #       aliases:
  #         - grafana

  # promtail:
  #   image: grafana/promtail:2.8.2
  #   volumes:
  #     - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers
  #     - ./promtail-config.yaml:/etc/promtail/config.yml
  #   depends_on:
  #     - loki
  #   networks:
  #     tarkib:
  #       aliases:
  #         - promtail

  app-news:
    build: .
    container_name: app-news
    networks:
      tarkib:
        aliases:
          - app-news
    env_file: 
      - .env
    ports:
      - "8888:8888"
    environment:
      - REDIS_URL=redis://redis:6379
      - MINIO_URL=http://minio:9000


  postgres:
    container_name: postgres
    image: postgres
    networks:
      tarkib:
        aliases:
          - postgres
    volumes:
      - pg-data:/var/lib/postgresql/datatarkibuz
    env_file: .env
    ports:
      - "5431:5432"

  # postgres-news:
  #   container_name: postgres-news
  #   image: postgres
  #   env_file:
  #     - .env
  #   networks:
  #     tarkib:
  #       aliases:
  #         - postgres
  #   volumes:
  #     - pg-data:/var/lib/postgresql/data
  #   ports:
  #     - "5555:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # minio:
  #   container_name: minio-news
  #   image: bitnami/minio:2022
  #   networks:
  #     tarkib:
  #       aliases:
  #         - minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   env_file: .env
  #   volumes:
  #     - minio-data:/data
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "curl -f http://localhost:9000/minio/health/live || exit 1",
  #       ]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5


networks:
  tarkib:

volumes:
  grafana-data:
  pg-data:
  loki-data:
  minio-data: